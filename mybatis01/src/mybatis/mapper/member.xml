<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="mybatis.mapper.member">

	<resultMap type="memberVO" id="memVo">
		<result column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="email" property="email"/>
		<result column="password" property="password"/>
		<result column="regdate" property="regdate"/>
	</resultMap>
	
	<resultMap type="java.util.HashMap" id="memResult">
		<result column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="email" property="email"/>
		<result column="password" property="password"/>
		<result column="regdate" property="regdate"/>
	</resultMap>

  <select id="selectAll" resultMap="memVo"><!-- id : 메서드 이름 / resultMap : 쿼리 실행 결과(객체) , resultType : 쿼리 실행 결과(기본타입) -->
    SELECT * 
    FROM member
  </select> 
  
  <select id="selectAllToHash" resultMap="memResult"><!--  객체가 아닌 해시맵으로도 데이터를 추출할 수 있다. -->
    SELECT * 
    FROM member
  </select> 
  
  <select id="selectCNT" resultType="int">
  	SELECT COUNT(*) FROM member
  </select>
  
  <select id="selectByEmail" resultType="memberVO" parameterType="String">
  	SELECT * FROM member
  	WHERE email=#{email}
  </select>
  
  <!-- 데이터 삽입  : INSERT -->
  <insert id="insertMember" parameterType="memberVO" >
  	INSERT INTO member
	VALUES(MEMBER_SEQ.nextval,#{email},#{password},#{name},sysdate)
  </insert>
  
  <!--  데이터 수정 : UPDATE  -->
  <update id="updateMember" parameterType="memberVO"  >
  	UPDATE member SET name=#{name}, password=#{password}
  	WHERE email=#{email}
  </update>
  
  <!--  데이터 삭제 : DELETE -->
  <delete id="deleteMember" parameterType="String"  >
  	DELETE FROM member
  	WHERE email=#{email}
  </delete>
  
  <!-- 동적 SQL문 생성 :IF-->
<!--   <select id="selectMember"  parameterType="memberVO" resultMap="memVo">
  	SELECT * FROM member
  	<where>
  		<if test="email != '' and email != null">
  			email = #{email}  SELECT * FROM member WHERE email = #{email}
  		</if>
  		<if test="name != '' and name != null">
  			AND name = #{name} SELECT * FROM member WHERE email = #{email} AND name = #{name}
  							    SELECT * FROM member WHERE name = #{name}
  		</if>
  	</where>
  	ORDER BY id ASC
  </select> -->
  <!-- 동적 SQL문 생성 : choose-->
  <select id="selectMember"  parameterType="memberVO" resultMap="memVo">
	  SELECT * FROM member
	  <where>
	  	 <choose>
	  	 	<when test="email != '' and email != null and name != '' and name != null">
	  	 		email = #{email} AND name = #{name}
	  	 	</when>
	  	 	<when test="email != '' and email != null">
	  	 		email = #{email} 
	  	 	</when>
	  	 	<when test="name != '' and name != null">
	  	 		name = #{name}
	  	 	</when>
	  	 </choose>
	  </where>
	  ORDER BY id ASC
  </select>
  <!-- 동적 SQL문 생성 : foreach -->
  <select id="foreachSearch" resultMap="memVo" parameterType="java.util.Map">
  	SELECT * FROM member
  	WHERE name in <!-- list = {'김길동','이길동','홍길동'} item = '김길동' '이길동' '홍길동'-->
  	<foreach collection="list" item="item" open="(" separator="," close=")">
  		#{item}   <!-- ( '김길동' , '이길동' , '홍길동' ) -->
  	</foreach> 	
  	ORDER BY id ASC
  </select>
  
  
  
</mapper>